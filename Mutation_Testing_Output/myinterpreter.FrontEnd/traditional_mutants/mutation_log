ROR_1:17:java.lang.String_implementation(java.lang.String): inputType == \"Continuous\"  =>   inputType != \"Continuous\"
COR_1:23:java.lang.String_implementation(java.lang.String): input.equals( \"stop\" ) || input.equals( \"exit\" )  =>   input.equals( \"stop\" ) && input.equals( \"exit\" )
COR_2:23:java.lang.String_implementation(java.lang.String): input.equals( \"stop\" ) || input.equals( \"exit\" )  =>   input.equals( \"stop\" ) ^ input.equals( \"exit\" )
COI_1:17:java.lang.String_implementation(java.lang.String): inputType == \"Continuous\"  =>  !(inputType == "Continuous")
COI_2:23:java.lang.String_implementation(java.lang.String): input.equals( \"stop\" ) || input.equals( \"exit\" )  =>  !(input.equals( "stop" ) || input.equals( "exit" ))
SDL_1:18:java.lang.String_implementation(java.lang.String): myinterpreter.BackEnd connector = new myinterpreter.BackEnd(); java.lang.String output = \"\"; if (inputType == \"Continuous\") {     java.util.Scanner scan = new java.util.Scanner( System.in );     java.lang.String input;     while (true) {         System.out.println( \">>>\" );         input = scan.nextLine();         if (input.equals( \"stop\" ) || input.equals( \"exit\" )) {             break;         }         System.out.println( connector.processor( input ) );         output = \"Continuous inputType choosen so output is continuous\";     } } else {     output = connector.processor( inputType ); } return output;  =>   myinterpreter.BackEnd connector = new myinterpreter.BackEnd(); java.lang.String output = \"\"; return output;
SDL_2:20:java.lang.String_implementation(java.lang.String): java.util.Scanner scan = new java.util.Scanner( System.in ); java.lang.String input; while (true) {     System.out.println( \">>>\" );     input = scan.nextLine();     if (input.equals( \"stop\" ) || input.equals( \"exit\" )) {         break;     }     System.out.println( connector.processor( input ) );     output = \"Continuous inputType choosen so output is continuous\"; }  =>   java.util.Scanner scan = new java.util.Scanner( System.in ); java.lang.String input;
SDL_3:32:java.lang.String_implementation(java.lang.String): if (inputType == \"Continuous\") {     java.util.Scanner scan = new java.util.Scanner( System.in );     java.lang.String input;     while (true) {         System.out.println( \">>>\" );         input = scan.nextLine();         if (input.equals( \"stop\" ) || input.equals( \"exit\" )) {             break;         }         System.out.println( connector.processor( input ) );         output = \"Continuous inputType choosen so output is continuous\";     } } else {     output = connector.processor( inputType ); }  =>   if (true) {     java.util.Scanner scan = new java.util.Scanner( System.in );     java.lang.String input;     while (true) {         System.out.println( \">>>\" );         input = scan.nextLine();         if (input.equals( \"stop\" ) || input.equals( \"exit\" )) {             break;         }         System.out.println( connector.processor( input ) );         output = \"Continuous inputType choosen so output is continuous\";     } } else {     output = connector.processor( inputType ); }
SDL_4:30:java.lang.String_implementation(java.lang.String): output = connector.processor( inputType );  =>  
SDL_5:27:java.lang.String_implementation(java.lang.String): System.out.println( \">>>\" ); input = scan.nextLine(); if (input.equals( \"stop\" ) || input.equals( \"exit\" )) {     break; } System.out.println( connector.processor( input ) ); output = \"Continuous inputType choosen so output is continuous\";  =>   input = scan.nextLine(); if (input.equals( \"stop\" ) || input.equals( \"exit\" )) {     break; } System.out.println( connector.processor( input ) ); output = \"Continuous inputType choosen so output is continuous\";
SDL_6:27:java.lang.String_implementation(java.lang.String): System.out.println( \">>>\" ); input = scan.nextLine(); if (input.equals( \"stop\" ) || input.equals( \"exit\" )) {     break; } System.out.println( connector.processor( input ) ); output = \"Continuous inputType choosen so output is continuous\";  =>   System.out.println( \">>>\" ); if (input.equals( \"stop\" ) || input.equals( \"exit\" )) {     break; } System.out.println( connector.processor( input ) ); output = \"Continuous inputType choosen so output is continuous\";
SDL_7:25:java.lang.String_implementation(java.lang.String): System.out.println( \">>>\" ); input = scan.nextLine(); if (input.equals( \"stop\" ) || input.equals( \"exit\" )) {     break; } System.out.println( connector.processor( input ) ); output = \"Continuous inputType choosen so output is continuous\";  =>   System.out.println( \">>>\" ); input = scan.nextLine(); System.out.println( connector.processor( input ) ); output = \"Continuous inputType choosen so output is continuous\";
SDL_8:27:java.lang.String_implementation(java.lang.String): System.out.println( \">>>\" ); input = scan.nextLine(); if (input.equals( \"stop\" ) || input.equals( \"exit\" )) {     break; } System.out.println( connector.processor( input ) ); output = \"Continuous inputType choosen so output is continuous\";  =>   System.out.println( \">>>\" ); input = scan.nextLine(); if (input.equals( \"stop\" ) || input.equals( \"exit\" )) {     break; } output = \"Continuous inputType choosen so output is continuous\";
SDL_9:27:java.lang.String_implementation(java.lang.String): System.out.println( \">>>\" ); input = scan.nextLine(); if (input.equals( \"stop\" ) || input.equals( \"exit\" )) {     break; } System.out.println( connector.processor( input ) ); output = \"Continuous inputType choosen so output is continuous\";  =>   System.out.println( \">>>\" ); input = scan.nextLine(); if (input.equals( \"stop\" ) || input.equals( \"exit\" )) {     break; } System.out.println( connector.processor( input ) );
SDL_10:24:java.lang.String_implementation(java.lang.String): break;  =>  
SDL_11:26:java.lang.String_implementation(java.lang.String): if (input.equals( \"stop\" ) || input.equals( \"exit\" )) {     break; }  =>   if (true) {     break; }
SDL_12:33:java.lang.String_implementation(java.lang.String): return output;  =>   return \"\";
VDL_1:17:java.lang.String_implementation(java.lang.String):inputType == "Continuous" => "Continuous"
ODL_1:17:java.lang.String_implementation(java.lang.String):inputType == "Continuous" => inputType
ODL_2:17:java.lang.String_implementation(java.lang.String):inputType == "Continuous" => "Continuous"
ODL_3:23:java.lang.String_implementation(java.lang.String):input.equals( "stop" ) || input.equals( "exit" ) => input.equals( "stop" )
ODL_4:23:java.lang.String_implementation(java.lang.String):input.equals( "stop" ) || input.equals( "exit" ) => input.equals( "exit" )
CDL_1:17:java.lang.String_implementation(java.lang.String):inputType == "Continuous" => inputType
